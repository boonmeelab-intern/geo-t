{"version":3,"sources":["../../../src/lib/parse.js"],"names":["parse","data","loaders","options","url","Array","isArray","autoUrl","name","loader","parseSync","parseInBatches","parseInBatchesSync"],"mappings":"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","sourcesContent":["import {isFileReadable} from '../javascript-utils/is-type';\nimport {autoDetectLoader} from './loader-utils/auto-detect-loader';\nimport {normalizeLoader, isLoaderObject} from './loader-utils/normalize-loader';\nimport {mergeLoaderAndUserOptions} from './loader-utils/normalize-options';\nimport {getRegisteredLoaders} from './register-loaders';\nimport {parseWithLoader, parseWithLoaderInBatches, parseWithLoaderSync} from './parse-with-loader';\n\nexport async function parse(data, loaders, options, url) {\n  // Signature: parse(data, options, url)\n  // Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    url = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  // Extract a url for auto detection\n  const autoUrl = isFileReadable(url) ? url.name : url;\n\n  loaders = loaders || getRegisteredLoaders();\n  const loader = Array.isArray(loaders) ? autoDetectLoader(autoUrl, data, loaders) : loaders;\n  if (!loader) {\n    // no loader available\n    // TODO: throw error?\n    return null;\n  }\n\n  normalizeLoader(loader);\n\n  // Normalize options\n  options = mergeLoaderAndUserOptions(options, loader);\n\n  return await parseWithLoader(data, loader, options, autoUrl);\n}\n\nexport function parseSync(data, loaders, options, url) {\n  // Signature: parseSync(data, options, url)\n  // Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    url = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  // Choose loader and normalize it\n  loaders = loaders || getRegisteredLoaders();\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, data, loaders) : loaders;\n  normalizeLoader(loader);\n\n  // Normalize options\n  options = mergeLoaderAndUserOptions(options, loader);\n\n  return parseWithLoaderSync(data, loader, options, url);\n}\n\nexport async function parseInBatches(data, loaders, options, url) {\n  // Signature: parseInBatches(data, options, url)\n  // Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    url = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  // Choose loader and normalize it\n  loaders = loaders || getRegisteredLoaders();\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, null, loaders) : loaders;\n  normalizeLoader(loader);\n\n  // Normalize options\n  options = mergeLoaderAndUserOptions(options, loader);\n\n  return parseWithLoaderInBatches(data, loader, options, url);\n}\n\nexport async function parseInBatchesSync(data, loaders, options, url) {\n  // Signature: parseInBatchesSync(data, options, url)\n  // Uses registered loaders\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    url = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  // Choose loader and normalize it\n  loaders = loaders || getRegisteredLoaders();\n  const loader = Array.isArray(loaders) ? autoDetectLoader(url, null, loaders) : loaders;\n  normalizeLoader(loader);\n\n  // Normalize options\n  options = mergeLoaderAndUserOptions(options, loader);\n\n  return parseWithLoaderInBatches(data, loader, options, url);\n}\n"],"file":"parse.js"}