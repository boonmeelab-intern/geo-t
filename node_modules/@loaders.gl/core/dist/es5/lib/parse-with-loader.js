"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseWithLoader = parseWithLoader;
exports.parseWithLoaderSync = parseWithLoaderSync;
exports.parseWithLoaderInBatches = parseWithLoaderInBatches;
exports.parseWithLoaderInBatchesSync = parseWithLoaderInBatchesSync;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _assert = _interopRequireDefault(require("../utils/assert"));

var _parseWithWorker = _interopRequireDefault(require("./parse-with-worker"));

var _getData = require("./loader-utils/get-data");

function parseWithLoader(_x, _x2, _x3, _x4) {
  return _parseWithLoader.apply(this, arguments);
}

function _parseWithLoader() {
  _parseWithLoader = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(data, loader, options, url) {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = url || (0, _getData.getUrlFromData)(data);
            _context.next = 3;
            return (0, _getData.getArrayBufferOrStringFromData)(data, loader);

          case 3:
            data = _context.sent;

            if (!(loader.parseTextSync && typeof data === 'string')) {
              _context.next = 7;
              break;
            }

            options.dataType = 'text';
            return _context.abrupt("return", loader.parseTextSync(data, options, url, loader));

          case 7:
            if (!loader.parseSync) {
              _context.next = 9;
              break;
            }

            return _context.abrupt("return", loader.parseSync(data, options, url, loader));

          case 9:
            if (!loader.parse) {
              _context.next = 13;
              break;
            }

            _context.next = 12;
            return loader.parse(data, options, url, loader);

          case 12:
            return _context.abrupt("return", _context.sent);

          case 13:
            if (!loader.worker) {
              _context.next = 17;
              break;
            }

            _context.next = 16;
            return (0, _parseWithWorker["default"])(loader.worker, data, options);

          case 16:
            return _context.abrupt("return", _context.sent);

          case 17:
            return _context.abrupt("return", (0, _assert["default"])(false));

          case 18:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _parseWithLoader.apply(this, arguments);
}

function parseWithLoaderSync(data, loader, options, url) {
  data = (0, _getData.getArrayBufferOrStringFromDataSync)(data, loader);

  if (loader.parseTextSync && typeof data === 'string') {
    return loader.parseTextSync(data, options, url, loader);
  }

  if (loader.parseSync) {
    return loader.parseSync(data, options, url, loader);
  }

  return (0, _assert["default"])(false);
}

function parseWithLoaderInBatches(_x5, _x6, _x7, _x8) {
  return _parseWithLoaderInBatches.apply(this, arguments);
}

function _parseWithLoaderInBatches() {
  _parseWithLoaderInBatches = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee2(data, loader, options, url) {
    var inputIterator, outputIterator;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (!loader.parseInBatches) {
              _context2.next = 6;
              break;
            }

            _context2.next = 3;
            return (0, _getData.getAsyncIteratorFromData)(data);

          case 3:
            inputIterator = _context2.sent;
            outputIterator = loader.parseInBatches(inputIterator, options, url, loader);
            return _context2.abrupt("return", outputIterator);

          case 6:
            return _context2.abrupt("return", null);

          case 7:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _parseWithLoaderInBatches.apply(this, arguments);
}

function parseWithLoaderInBatchesSync(_x9, _x10, _x11, _x12) {
  return _parseWithLoaderInBatchesSync.apply(this, arguments);
}

function _parseWithLoaderInBatchesSync() {
  _parseWithLoaderInBatchesSync = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee3(data, loader, options, url) {
    var inputIterator, outputIterator;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (!loader.parseInBatchesSync) {
              _context3.next = 4;
              break;
            }

            inputIterator = (0, _getData.getIteratorFromData)(data);
            outputIterator = loader.parseInBatchesSync(inputIterator, options, url, loader, url);
            return _context3.abrupt("return", outputIterator);

          case 4:
            return _context3.abrupt("return", (0, _assert["default"])(false));

          case 5:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _parseWithLoaderInBatchesSync.apply(this, arguments);
}
//# sourceMappingURL=parse-with-loader.js.map