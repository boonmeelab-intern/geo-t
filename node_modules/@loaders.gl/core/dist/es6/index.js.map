{"version":3,"sources":["../../src/index.js"],"names":["parse","parseSync","fetchFile","load","resolvePath","global","setPathPrefix","getPathPrefix","readFileSync","writeFile","writeFileSync","registerLoaders","parseInBatches","parseInBatchesSync","loadInBatches","encode","encodeSync","encodeInBatches","save","saveSync","isPromise","isIterable","isAsyncIterable","isIterator","isFetchResponse","isReadableStream","isWritableStream","isArrayBuffer","isBlob","toArrayBuffer","blobToArrayBuffer","toDataView","padTo4Bytes","copyToArray","copyArrayBuffer","getStreamIterator","forEach","concatenateAsyncIterator","lineAsyncIterator","textDecoderAsyncIterator","numberedLineAsyncIterator","isBrowser","self","window","document","default","assert","TextEncoder","TextDecoder","createReadStream","url","options","console","warn","response","body","parseFile","parseFileSync","loadFile"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,SAAf,QAA+B,aAA/B;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,SAAQC,MAAR,QAAqB,iBAArB;AAGA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCH,WAAtC,QAAwD,6BAAxD;AACA,SAAQF,SAAR,QAAwB,wBAAxB;AACA,SAAQM,YAAR,QAA2B,uBAA3B;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,wBAAvC;AAGA,SAAQC,eAAR,QAA8B,wBAA9B;AAGA,SAAQX,KAAR,EAAeC,SAAf,EAA0BW,cAA1B,EAA0CC,kBAA1C,QAAmE,aAAnE;AACA,SAAQV,IAAR,EAAcW,aAAd,QAAkC,YAAlC;AAGA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,eAA5B,QAAkD,cAAlD;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,YAA7B;AAGA,SACEC,SADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,UAJF,EAKEC,eALF,EAMEC,gBANF,EAOEC,gBAPF,QAQO,4BARP;AAUA,SACEC,aADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,iBAJF,EAKEC,UALF,QAMO,iCANP;AAQA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,eAAlC,QAAwD,sCAAxD;AAGA,SAAQC,iBAAR,QAAgC,iCAAhC;AAEA,SACEC,OADF,EAEEC,wBAFF,EAGEC,iBAHF,EAIEC,wBAJF,EAKEC,yBALF,QAMO,yCANP;AASA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCtC,MAAjC,EAAyCuC,QAAzC,QAAwD,iBAAxD;AACA,SAAQC,OAAO,IAAIC,MAAnB,QAAgC,gBAAhC;AAKA,OAAO,MAAMC,WAAW,GAAG1C,MAAM,CAAC0C,WAA3B;AACP,OAAO,MAAMC,WAAW,GAAG3C,MAAM,CAAC2C,WAA3B;AAGP,gBAAsBC,gBAAtB;AAAA;AAAA;;;wCAAO,WAAgCC,GAAhC,EAAqCC,OAArC,EAA8C;AAEnDC,IAAAA,OAAO,CAACC,IAAR,CAAa,oEAAb;AACAH,IAAAA,GAAG,GAAG9C,WAAW,CAAC8C,GAAD,CAAjB;AACA,UAAMI,QAAQ,SAASpD,SAAS,CAACgD,GAAD,EAAMC,OAAN,CAAhC;AACA,WAAOG,QAAQ,CAACC,IAAhB;AACD,G;;;;AAED,OAAO,SAASC,SAAT,GAA4B;AACjCJ,EAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb;AACA,SAAOrD,KAAK,CAAC,YAAD,CAAZ;AACD;AAED,OAAO,SAASyD,aAAT,GAAgC;AACrCL,EAAAA,OAAO,CAACC,IAAR,CAAa,yCAAb;AACA,SAAOpD,SAAS,CAAC,YAAD,CAAhB;AACD;AAED,OAAO,SAASyD,QAAT,GAA2B;AAChCN,EAAAA,OAAO,CAACC,IAAR,CAAa,mCAAb;AACA,SAAOlD,IAAI,CAAC,YAAD,CAAX;AACD","sourcesContent":["import {parse, parseSync} from './lib/parse';\nimport {fetchFile} from './lib/fetch/fetch-file';\nimport {load} from './lib/load';\nimport {resolvePath} from './lib/fetch/file-aliases';\nimport {global} from './utils/globals';\n\n// FILE READING AND WRITING\nexport {setPathPrefix, getPathPrefix, resolvePath} from './lib/fetch/file-aliases.js';\nexport {fetchFile} from './lib/fetch/fetch-file';\nexport {readFileSync} from './lib/fetch/read-file';\nexport {writeFile, writeFileSync} from './lib/fetch/write-file';\n\n// FILE PARSING AND ENCODING\nexport {registerLoaders} from './lib/register-loaders';\n\n// LOADING (READING + PARSING)\nexport {parse, parseSync, parseInBatches, parseInBatchesSync} from './lib/parse';\nexport {load, loadInBatches} from './lib/load';\n\n// ENCODING AND SAVING\nexport {encode, encodeSync, encodeInBatches} from './lib/encode';\nexport {save, saveSync} from './lib/save';\n\n// \"JAVASCRIPT\" UTILS\nexport {\n  isPromise,\n  isIterable,\n  isAsyncIterable,\n  isIterator,\n  isFetchResponse,\n  isReadableStream,\n  isWritableStream\n} from './javascript-utils/is-type';\n\nexport {\n  isArrayBuffer,\n  isBlob,\n  toArrayBuffer,\n  blobToArrayBuffer,\n  toDataView\n} from './javascript-utils/binary-utils';\n\nexport {padTo4Bytes, copyToArray, copyArrayBuffer} from './javascript-utils/memory-copy-utils';\n\n// ITERATOR UTILS\nexport {getStreamIterator} from './javascript-utils/stream-utils';\n\nexport {\n  forEach,\n  concatenateAsyncIterator,\n  lineAsyncIterator,\n  textDecoderAsyncIterator,\n  numberedLineAsyncIterator\n} from './javascript-utils/async-iterator-utils';\n\n// CORE UTILS\nexport {isBrowser, self, window, global, document} from './utils/globals';\nexport {default as assert} from './utils/assert';\n\n// DEPRECATED\n\n// Use @loaders.gl/polyfills and global symbols instead\nexport const TextEncoder = global.TextEncoder;\nexport const TextDecoder = global.TextDecoder;\n\n// Returns a promise that resolves to a readable stream\nexport async function createReadStream(url, options) {\n  // eslint-disable-next-line\n  console.warn('createReadStream() deprecated, use fetch().then(resp => resp.body)');\n  url = resolvePath(url);\n  const response = await fetchFile(url, options);\n  return response.body;\n}\n\nexport function parseFile(...args) {\n  console.warn('parse() deprecated, use parse()'); // eslint-disable-line\n  return parse(...args);\n}\n\nexport function parseFileSync(...args) {\n  console.warn('parseSync() deprecated, use parseSync()'); // eslint-disable-line\n  return parseSync(...args);\n}\n\nexport function loadFile(...args) {\n  console.warn('loadFile() deprecated, use load()'); // eslint-disable-line\n  return load(...args);\n}\n"],"file":"index.js"}